[{"C:\\Study\\itIncubator\\todolist-copy\\src\\features\\Todolists\\todolists-reducer.ts":"1","C:\\Study\\itIncubator\\todolist-copy\\src\\features\\Login\\auth-reducer.ts":"2","C:\\Study\\itIncubator\\todolist-copy\\src\\features\\Login\\Login.tsx":"3","C:\\Study\\itIncubator\\todolist-copy\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"4","C:\\Study\\itIncubator\\todolist-copy\\src\\app\\store.ts":"5","C:\\Study\\itIncubator\\todolist-copy\\src\\index.tsx":"6","C:\\Study\\itIncubator\\todolist-copy\\src\\features\\Todolists\\TodolistLists.tsx":"7","C:\\Study\\itIncubator\\todolist-copy\\src\\api\\todolists-api.ts":"8","C:\\Study\\itIncubator\\todolist-copy\\src\\app\\app-reducer.ts":"9","C:\\Study\\itIncubator\\todolist-copy\\src\\features\\Todolists\\tasks-reducer.ts":"10","C:\\Study\\itIncubator\\todolist-copy\\src\\app\\App.tsx":"11"},{"size":5231,"mtime":1614085982579,"results":"12","hashOfConfig":"13"},{"size":1815,"mtime":1614692594663,"results":"14","hashOfConfig":"13"},{"size":3480,"mtime":1614686546125,"results":"15","hashOfConfig":"13"},{"size":964,"mtime":1614681665490,"results":"16","hashOfConfig":"13"},{"size":1167,"mtime":1614681749704,"results":"17","hashOfConfig":"13"},{"size":783,"mtime":1614680341560,"results":"18","hashOfConfig":"13"},{"size":3832,"mtime":1614693120699,"results":"19","hashOfConfig":"13"},{"size":3187,"mtime":1614692429618,"results":"20","hashOfConfig":"13"},{"size":1809,"mtime":1614691082793,"results":"21","hashOfConfig":"13"},{"size":8362,"mtime":1614089889683,"results":"22","hashOfConfig":"13"},{"size":2671,"mtime":1614693300891,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"xyj0i3",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Study\\itIncubator\\todolist-copy\\src\\features\\Todolists\\todolists-reducer.ts",[],["48","49"],"C:\\Study\\itIncubator\\todolist-copy\\src\\features\\Login\\auth-reducer.ts",[],"C:\\Study\\itIncubator\\todolist-copy\\src\\features\\Login\\Login.tsx",["50"],"import { Button, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, Grid, TextField } from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AppRootStateType } from '../../app/store';\r\nimport { loginUser } from './auth-reducer';\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport const Login = () => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn);\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            rememberMe: false\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(loginUser(values));\r\n        },\r\n        validate: (values) => {\r\n\r\n            const errors: FormikErrorType = {};\r\n\r\n            if (!values.email) {\r\n                errors.email = \"Email is required!\";\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = \"Email is invalid!\";\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Password is required\";\r\n            } else if (values.password.length < 3) {\r\n                errors.password = \"Password is too short!\"\r\n            }\r\n            return errors;\r\n        }\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return <Grid container justify=\"center\">\r\n        <Grid item xs={4}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                     <a href={'https://social-network.samuraijs.com/'}\r\n                                target={'_blank'}>here\r\n                     </a>\r\n                        </p>\r\n                        <p>or use common test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps(\"email\")}\r\n                        />\r\n                        {(formik.errors.email && formik.touched.email) && <div style={{ color: \"red\" }}>{formik.errors.email}</div>}\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps(\"password\")}\r\n                        />\r\n                        {(formik.errors.password && formik.touched.password) && <div style={{ color: \"red\" }}>{formik.errors.password}</div>}\r\n                        <FormControlLabel\r\n                            label={'Remember me'}\r\n                            control={<Checkbox {...formik.getFieldProps(\"rememberMe\")} checked={formik.values.rememberMe} />}\r\n                        />\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </form>\r\n        </Grid>\r\n    </Grid>\r\n}\r\n\r\n","C:\\Study\\itIncubator\\todolist-copy\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"C:\\Study\\itIncubator\\todolist-copy\\src\\app\\store.ts",[],"C:\\Study\\itIncubator\\todolist-copy\\src\\index.tsx",[],"C:\\Study\\itIncubator\\todolist-copy\\src\\features\\Todolists\\TodolistLists.tsx",["51","52","53","54","55","56","57","58"],"C:\\Study\\itIncubator\\todolist-copy\\src\\api\\todolists-api.ts",[],"C:\\Study\\itIncubator\\todolist-copy\\src\\app\\app-reducer.ts",[],"C:\\Study\\itIncubator\\todolist-copy\\src\\features\\Todolists\\tasks-reducer.ts",[],"C:\\Study\\itIncubator\\todolist-copy\\src\\app\\App.tsx",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":58,"column":33,"nodeType":"65","endLine":58,"endColumn":50},{"ruleId":"66","severity":1,"message":"67","line":34,"column":8,"nodeType":"68","endLine":34,"endColumn":10,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"70","line":38,"column":8,"nodeType":"68","endLine":38,"endColumn":10,"suggestions":"71"},{"ruleId":"66","severity":1,"message":"70","line":42,"column":8,"nodeType":"68","endLine":42,"endColumn":10,"suggestions":"72"},{"ruleId":"66","severity":1,"message":"70","line":46,"column":8,"nodeType":"68","endLine":46,"endColumn":10,"suggestions":"73"},{"ruleId":"66","severity":1,"message":"70","line":50,"column":8,"nodeType":"68","endLine":50,"endColumn":10,"suggestions":"74"},{"ruleId":"66","severity":1,"message":"70","line":55,"column":8,"nodeType":"68","endLine":55,"endColumn":10,"suggestions":"75"},{"ruleId":"66","severity":1,"message":"70","line":59,"column":8,"nodeType":"68","endLine":59,"endColumn":10,"suggestions":"76"},{"ruleId":"66","severity":1,"message":"70","line":63,"column":8,"nodeType":"68","endLine":63,"endColumn":10,"suggestions":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["80"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["81"],["82"],["83"],["84"],["85"],["86"],["87"],"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},{"desc":"90","fix":"92"},{"desc":"90","fix":"93"},{"desc":"90","fix":"94"},{"desc":"90","fix":"95"},{"desc":"90","fix":"96"},{"desc":"90","fix":"97"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"98","text":"99"},"Update the dependencies array to be: [dispatch]",{"range":"100","text":"101"},{"range":"102","text":"101"},{"range":"103","text":"101"},{"range":"104","text":"101"},{"range":"105","text":"101"},{"range":"106","text":"101"},{"range":"107","text":"101"},[1306,1308],"[demo, dispatch, isLoggedIn]",[1450,1452],"[dispatch]",[1594,1596],[1782,1784],[1970,1972],[2174,2176],[2294,2296],[2446,2448]]